#!/bin/bash

# SPDX-FileCopyrightText: 2023 - 2025 Yadong Zeng<zdsjtu@gmail.com> & Dewen Liu<1803368907@qq.com>
#
# SPDX-License-Identifier: BSD-3-Clause

# break the cases into different key-value pairs
declare -A Cases
Cases[Bubble]=inputs.2d.bubble
# Cases[ConvectedVortex]=inputs.2d.convectedvortex
# Cases[DoubleShearLayer]=inputs.2d.double_shear_layer-rotate
# Cases[FlowPastCylinder]=inputs.2d.flow_past_cylinder-x
# Cases[LidDrivenCavity]=inputs.2d.lid_driven_cavity
# Cases[RayleighTaylor]=inputs.2d.rayleightaylor
# Cases[TaylorGreen]=inputs.2d.taylorgreen

for i in "${!Cases[@]}"
do
    echo "key  : $i"
    echo "value: ${Cases[$i]}"
    work_folder=${PWD}
    new_case_dir=${PWD}/$i
    cd $new_case_dir
    rm -rf plt* chk* *.visit Backtrace* bl_prof* log*
    echo "delete old data"

    # Build a new dir for storing the results
    results_topdir=$new_case_dir/case_results_cpu2d
    # echo "delete the old dir $results_topdir"
    # rm -rf $results_topdir
    echo "build a new dir $results_topdir"
    mkdir -p $results_topdir

    cd $new_case_dir

    cp GNUmakefile GNUmakefile.temp
    sed -i "s/3 # DIM/2 # DIM/g" GNUmakefile
    sed -i "s/FALSE # MPI/TRUE # MPI/g" GNUmakefile
    sed -i "s/FALSE # OMP/TRUE # OMP/g" GNUmakefile
    sed -i "s/TRUE # CUDA/FALSE # CUDA/g" GNUmakefile

    # build the simulation for CPU
    make -j16

    # restore the input file
    cp ${Cases[$i]}.temp ${Cases[$i]}

    for skip_level_projector in 0 # 1
    do
    for cycling in Auto # Auto None
    do
    for max_level in 1 # 1 2
    do
    for max_grid_size in 8 # 8 16
    do
    for regrid_int in 4 # 4 8
    do

    cd $new_case_dir
    cp ${Cases[$i]} ${Cases[$i]}.temp

################################################################################
    # replace the variables
    sed -i "s/0 # skip_level_projector/${skip_level_projector} # skip_level_projector/g" ${Cases[$i]}    
    sed -i "s/Auto # subcycling_mode/${cycling} # subcycling_mode/g" ${Cases[$i]}
    sed -i "s/8 # max_grid_size/${max_grid_size} # max_grid_size/g" ${Cases[$i]}
    sed -i "s/0 # max_level/${max_level} # max_level/g" ${Cases[$i]}
    sed -i "s/4 # regrid_int/${regrid_int} # regrid_int/g" ${Cases[$i]}

    # run the simulation
    OMP_NUM_THREADS=2 mpiexec -n 4 ./amr2d.gnu.PROF.MPI.ex ${Cases[$i]} > log.txt
    # OMP_NUM_THREADS=2 mpirun -n 4 ./amr2d.gnu.PROF.MPI.ex ${Cases[$i]} > log.txt

    results_saveddir=$new_case_dir/case_results_cpu2d/cpu2d_skip${skip_level_projector}_${cycling}_mgs${max_grid_size}_$maxlev${max_level}_regrid${regrid_int}
    echo "delete the old saved dir $results_saveddir"
    rm -rf $results_saveddir

    results_bottomdir=$new_case_dir/cpu2d_skip${skip_level_projector}_${cycling}_mgs${max_grid_size}_$maxlev${max_level}_regrid${regrid_int}
    echo "delete the old dir $results_bottomdir"
    rm -rf $results_bottomdir
    echo "build a new dir $results_bottomdir"
    mkdir -p $results_bottomdir
    echo "move the results into $results_bottomdir"
    mv plt* chk* bl_prof* log* $results_bottomdir
    cp ${Cases[$i]} $results_bottomdir
    mv $results_bottomdir $results_topdir
################################################################################

    # restore the input file
    cp ${Cases[$i]}.temp ${Cases[$i]}

   # exit
    echo "exit the dir $new_case_dir"
    cd ${work_folder}
    done
    done
    done
    done
    done

    cd $new_case_dir

    # restore the GNUMakefile
    cp GNUmakefile.temp GNUmakefile

done
